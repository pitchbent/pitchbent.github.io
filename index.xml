<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Blog Of Julius Bartel</title>
    <link>https://example.com/</link>
      <atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" />
    <description>The Blog Of Julius Bartel</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 06 Oct 2020 14:25:21 +0200</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>The Blog Of Julius Bartel</title>
      <link>https://example.com/</link>
    </image>
    
    <item>
      <title>Pinout</title>
      <link>https://example.com/post/pinout/</link>
      <pubDate>Tue, 06 Oct 2020 14:25:21 +0200</pubDate>
      <guid>https://example.com/post/pinout/</guid>
      <description>&lt;p&gt;I recently drew a pinout for my board, looks quite okay. I made it using GoodNotes on my iPad, because i do not know a single thing about Inkscape. It does not
look as fancy as the &amp;ldquo;Arduino Pinouts&amp;rdquo;, but it&amp;rsquo;s something I can work with.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ESP8266 vs STM32</title>
      <link>https://example.com/project/esp32vsstm32/</link>
      <pubDate>Tue, 22 Sep 2020 18:32:20 +0200</pubDate>
      <guid>https://example.com/project/esp32vsstm32/</guid>
      <description>&lt;p&gt;As a proof of concept and to test my skills I learned during my internship I decided to design a board which combines a basic STM32 processor with the wireless capabilities of an ESP8266 module.&lt;/p&gt;
&lt;p&gt;With this project I want to learn about:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Layouting of microprocessors&lt;/li&gt;
&lt;li&gt;Programming STM32s&lt;/li&gt;
&lt;li&gt;Programming ESP8266s&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The board turned out to be a little bit big, but it is working. I am able to flash the processors and make the onboard LEDs blink.&lt;/p&gt;
&lt;p&gt;This project will keep me busy for some time, because I want to use it for small IoT projects (home automation) like an irrigation system for my many, many plants.&lt;/p&gt;
&lt;h2 id=&#34;schematics&#34;&gt;Schematics&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./stm32.png&#34; alt=&#34;STM32&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./esp.png&#34; alt=&#34;ESP&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

The processor I used is an STM32F103C8T6 as well as an ESP8266-WROOM. Most of the schematics is taken from app notes from ST or Espressif. The two processors are connected via UART.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./everythingelse.png&#34; alt=&#34;Everything else&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

Power is regulated with an linear regulator, which brings 5V down to 3.3V.&lt;/p&gt;
&lt;p&gt;Additionally there are some built in LEDs. One for power monitoring and one for each microcontroller as status LED.&lt;/p&gt;
&lt;p&gt;The buttons are necessary for programming the chips. All the STM32 pins are broken out to the side, where pin headers can be soldered in.&lt;/p&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./layout.png&#34; alt=&#34;Layout&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

The Layout, as well as the Schematics were done in Altium. It is a simple two layer layout with components only on the top side. The bottom layer features a big grounded copper pour.&lt;/p&gt;
&lt;p&gt;The crystal oscillator features a guard ring.&lt;/p&gt;
&lt;h2 id=&#34;assembly&#34;&gt;Assembly&lt;/h2&gt;
&lt;p&gt;The PCB was ordered from JLC PCB because their prices can&amp;rsquo;t compete with the prices from european fabs. Parts were ordered from LCSC because they mostly are much cheaper than Digikey or Mouser.&lt;/p&gt;
&lt;p&gt;I hand soldered the board. It was quite easy, because of the low part count and because no &amp;ldquo;crazy&amp;rdquo; footprints were used.&lt;/p&gt;
&lt;h2 id=&#34;programming&#34;&gt;Programming&lt;/h2&gt;
&lt;p&gt;Not much to say about this right now, because I did not find much time to care about this. I was able to flash the chips tho, but only made the LEDs blink. More to come!&lt;/p&gt;
&lt;p&gt;Update: There is, at least, a pinout now:&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./pinout.png&#34; alt=&#34;Pinout&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rack</title>
      <link>https://example.com/post/rack/</link>
      <pubDate>Mon, 21 Sep 2020 14:43:38 +0200</pubDate>
      <guid>https://example.com/post/rack/</guid>
      <description>&lt;p&gt;In this little blog post I will describe how I built a small rack by myself. The size is 19inch/68HP with a standard height of 3U. There are two rows.&lt;/p&gt;
&lt;h2 id=&#34;case&#34;&gt;Case&lt;/h2&gt;
&lt;p&gt;The case is made of plywood, with a depth of 20.5cm - this more than enough for large modules and the power supplies in the back.&lt;/p&gt;
&lt;h2 id=&#34;power&#34;&gt;Power&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./power.jpg&#34; alt=&#34;Power&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

I didn&amp;rsquo;t bother with linear power supplies because switching supplies were a lot cheaper, with good specs. I used Meanwell supplies. I am thinking about building a power supply by myself, with switching supplies as &amp;ldquo;core&amp;rdquo; and linear regulators as output stage to smoothen the ripple - but not any time soon.&lt;/p&gt;
&lt;p&gt;The supplies I used feature +-12V as well as 5V rail.
I designed and 3D-printed a brace to screw the 5V supply to the backside of the case, the 12V supplies were mounted using the built in holes.&lt;/p&gt;
&lt;p&gt;Power distribution was realized by using stripboard and regular eurorack headers.&lt;/p&gt;
&lt;p&gt;The port for the AC-Mains cable features a fuse for additional security.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Almost Finished PCBs</title>
      <link>https://example.com/post/almost-finished-pcbs/</link>
      <pubDate>Mon, 21 Sep 2020 09:16:50 +0200</pubDate>
      <guid>https://example.com/post/almost-finished-pcbs/</guid>
      <description>&lt;p&gt;Finally, it is coming to an end. What started a few months back is finally taking shape. The first four modules are about to be finished.&lt;/p&gt;
&lt;p&gt;The only parts still missing are the jacks as well as the potentiometers and the SSM2164 chip for the filter.
I will order those parts from &lt;a href=&#34;http://www.thonk.co.uk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Thonk&lt;/a&gt;, because there is no cheap alternative distributor available which sells directly from china.&lt;/p&gt;
&lt;p&gt;Testing is not done yet as well, because my beloved makerspace &lt;a href=&#34;http://www.raumzeitlabor.de&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Raumzeitlabor&lt;/a&gt; is currently moving and because of this I do not have access to proper testing equipment.&lt;/p&gt;
&lt;p&gt;I am building the following four modules, which will form a nice drum voice when my  VCA is finished:&lt;/p&gt;
&lt;h2 id=&#34;krach-aus-strom&#34;&gt;Krach aus Strom&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./kas.jpg&#34; alt=&#34;KAS&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

This will be the main part of the drum voice. It&amp;rsquo;s only missing mechanical parts.&lt;/p&gt;
&lt;h2 id=&#34;dual-adsr&#34;&gt;Dual ADSR&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./dualadsr.jpg&#34; alt=&#34;Dual ADSR&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

The name already shows what this module is about - a dual ADSR with fancy faders, which light up according to the triggered stage. It is missing the mechanical parts as well.&lt;/p&gt;
&lt;h2 id=&#34;wavelet&#34;&gt;Wavelet&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./wavelet.jpg&#34; alt=&#34;Wavelet&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

This is the Plum Audio edition of the Mutable Instruments Ripples. It is a filter with a 12dB or 24dB low pass or a 12dB band pass which also has an internal VCA.
It is missing the mechanical parts and the SSM2164 chip.&lt;/p&gt;
&lt;h2 id=&#34;mbrane&#34;&gt;mBrane&lt;/h2&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./mbrane.jpg&#34; alt=&#34;mBrane&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;

This module will be my MIDI to CV bridge. It is based on the Mutable Instruments Yarns. It is obviously missing the mechanical parts. I did not solder the STM32, the DAC and the optocoupler yet, because I want to test the power rails first.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://example.com/post/hello_world/</link>
      <pubDate>Mon, 24 Aug 2020 15:04:30 +0200</pubDate>
      <guid>https://example.com/post/hello_world/</guid>
      <description>&lt;h1 id=&#34;hello-world&#34;&gt;Hello World&lt;/h1&gt;
&lt;h2 id=&#34;welcome&#34;&gt;Welcome&lt;/h2&gt;
&lt;p&gt;Welcome to my humble blog. I will use this webpage to showcase my projects.
Expect posts and projects about embedded programming and electronics, often related to music.&lt;/p&gt;
&lt;h2 id=&#34;where-it-runs&#34;&gt;Where it runs&lt;/h2&gt;
&lt;p&gt;To teach me something about Linux, I decided to host this blog by myself. It runs on a Raspberry Pi with an SSD, sitting in my flat.
The blog itself is based on Hugo with the Academic Theme.&lt;/p&gt;
&lt;h4 id=&#34;enjoy&#34;&gt;Enjoy!&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Quad VCA</title>
      <link>https://example.com/project/quad_vca/</link>
      <pubDate>Mon, 24 Aug 2020 14:28:47 +0200</pubDate>
      <guid>https://example.com/project/quad_vca/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;I need some VCAs. Quickly and as cheaply as possible. I&amp;rsquo;m not happy with the avaiable DIY modules. I thought about creating a SMD version of the&lt;a href=&#34;dintree.com&#34; title=&#34;VCA&#34;&gt;Dintree Quad VCA&lt;/a&gt;, but it is exponential only. I want a linear option as well.
I decided to still use the SSM2164 because it is used in one of my modules I&amp;rsquo;m building, too.&lt;/p&gt;
&lt;p&gt;There is a circuit in the &lt;a href=&#34;http://www.soundsemiconductor.com/downloads/ssi2164datasheet.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;datasheet&lt;/a&gt; which describes how to convert the exponential response to a linear one using an additional SSM2164 cell.&lt;/p&gt;
&lt;p&gt;Adding on top of this I want to have a couple of LEDs &amp;ldquo;showing&amp;rdquo; the CV. This will be done by putting two LEDs (or one bidirectional) in the feedback path of an opamp. This will not be a 100% correct representation, because that is not how we percept change of brightness, but it will be good enough for me (There is something called an &lt;a href=&#34;https://www.sound-au.com/project62a.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;s-curve&lt;/a&gt;).&lt;/p&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout&lt;/h2&gt;
&lt;h2 id=&#34;assembly&#34;&gt;Assembly&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://example.com/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://example.com/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://example.com/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://example.com/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
